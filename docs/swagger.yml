swagger: '2.0'
info:
  description: >-
    OPAR is the OTRS Package Archive, a collection of free OTRS addons. This
    spec describes the API for OPAR 3.0
  version: 1.0.0
  title: OPAR
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: opar@perl-services.de
  license:
    name: Artistic License 2.0
    url: 'http://www.perlfoundation.org/artistic_license_2_0'
host: opar.perl-services.de
basePath: /v1
schemes:
  - https
paths:
  /package:
    post:
      tags:
        - package
      summary: Upload a package
      description: Only allowed for logged in users
      operationId: uploadPackage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: uploadData
          required: true
          schema:
            $ref: '#/definitions/UploadData'
      responses:
        '201':
          description: created package
        '400':
          description: Invalid request
  '/package/{packageId}':
    get:
      tags:
        - package
      summary: Get all information about a package
      description: Returns a single instance of package
      operationId: getPackage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: packageId
          description: The id of the package
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PackageInfo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
    delete:
      tags:
        - package
      summary: Delete a package
      description: Delete package (logged in authors only)
      operationId: deletePackage
      produces:
        - application/json
      parameters:
        - in: path
          name: packageId
          description: The id of the package
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PackageInfo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
  '/package/{packageId}/download':
    get:
      tags:
        - package
      summary: Get the opm of a package
      description: Returns the opm of package
      operationId: downloadPackage
      consumes:
        - application/json
      produces:
        - application/xml
      parameters:
        - in: path
          name: packageId
          description: The id of the package
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
            format: byte
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
  /packages:
    get:
      tags:
        - package
      summary: Get a list of packages
      description: Returns a list of packages
      operationId: getPackages
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: author
          description: Authorname
          required: false
          type: string
        - in: query
          name: sort-by
          description: Framework version
          required: false
          type: string
          enum:
            - date
            - author
        - in: query
          name: format
          description: Format of the result list
          required: false
          type: string
          enum:
            - json
            - rss
        - in: query
          name: limit
          description: Format of the result list
          required: false
          type: integer
        - in: query
          name: framework
          description: Framework version
          required: false
          type: string
        - in: query
          name: search
          description: Search term
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PackageInfo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
  /author:
    post:
      tags:
        - author
      summary: Create author
      description: This can only be done by the logged in author.
      operationId: createAuthor
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created author object
          required: true
          schema:
            $ref: '#/definitions/Author'
      responses:
        default:
          description: successful operation
  /author/me:
    get:
      tags:
        - author
      summary: Get author by username
      description: ''
      operationId: getAuthor
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Author'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - author
      summary: Updated author
      description: This can only be done by the logged in user.
      operationId: updateAuthor
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Author'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - author
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: authorname
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid authername supplied
        '404':
          description: User not found
  /login:
    post:
      tags:
        - author
      summary: Logs author into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      tags:
        - author
      summary: Logs out current logged in author session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  '/repo/{repoID}/file':
    get:
      tags:
        - repository
      summary: Get file from repository
      description: Get a file from a repository
      operationId: getRepository
      produces:
        - application/xml
      parameters:
        - in: path
          name: repoID
          description: ID of the repository
          required: true
          type: string
        - in: query
          name: file
          description: requested file
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Repository'
        default:
          description: successful operation
securityDefinitions:
  jwt:
    type: apiKey
    name: api_key
    in: header
definitions:
  PublicCommentData:
    type: object
    properties:
      written:
        type: integer
        format: int64
        description: Epoche seconds when the comment was written
        example: '12348913812'
      comment:
        type: string
        example: This addon is really useful. Thanks!
      rate:
        type: integer
        format: int32
        example: '4'
      commenter:
        type: string
        example: reneeb
      version:
        type: string
        example: 4.0.1
    xml:
      name: Order
  UploadData:
    type: object
    properties:
      opm:
        type: string
        format: bytes
      description:
        type: string
    xml:
      name: UploadData
  Author:
    type: object
    required:
      - username
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      email:
        type: string
      password:
        type: string
    xml:
      name: User
  Repository:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
      framework:
        type: array
        description: All frameworks this addon version is for
        items:
          $ref: '#/definitions/VersionString'
      packages:
        type: array
        description: All addons that belong to this repository
        items:
          type: string
    xml:
      name: Tag
  PackageInfo:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: ArticleNotes
      website:
        type: string
        example: 'http://feature-addons.de'
      vendor:
        type: string
        example: Perl-Services.de
      upload-date:
        type: string
        example: '2017-04-06'
      description:
        type: string
        example: Add a note to articles
      documentation:
        type: string
        example: <h1>ArticleNotes</h1>...
      framework:
        type: array
        description: All frameworks this addon version is for
        items:
          $ref: '#/definitions/VersionString'
      comments:
        type: array
        description: All comments for this addon
        items:
          $ref: '#/definitions/PublicCommentData'
    xml:
      name: Package
  VersionString:
    type: integer
    format: int64
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
